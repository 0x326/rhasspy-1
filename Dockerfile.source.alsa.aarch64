ARG BUILD_ARCH=arm64v8
FROM ${BUILD_ARCH}/ubuntu:eoan as build
ARG BUILD_ARCH=arm64v8
ARG FRIENDLY_ARCH=arm64v8
ARG CPU_ARCH=aarch64

ENV LANG C.UTF-8

COPY etc/qemu-arm-static /usr/bin/
COPY etc/qemu-aarch64-static /usr/bin/

RUN apt-get update && \
    apt-get install --no-install-recommends --yes \
        python3 python3-dev python3-setuptools python3-pip python3-venv \
        build-essential swig libatlas-base-dev portaudio19-dev

# Build Rhasspy virtual environment
ENV RHASSPY_DIR=/usr/lib/rhasspy-voltron
ENV RHASSPY_VENV=${RHASSPY_DIR}/.venv
ENV RHASSPY_PIP=${RHASSPY_VENV}/bin/pip3

COPY requirements.txt ${RHASSPY_DIR}/
RUN python3 -m venv ${RHASSPY_VENV}
RUN ${RHASSPY_PIP} install --upgrade pip
RUN ${RHASSPY_PIP} install wheel setuptools

# Pocketsphinx without Pulseaudio dependency
COPY download/pocketsphinx-python.tar.gz /
RUN ${RHASSPY_PIP} install /pocketsphinx-python.tar.gz

# Runtime Python dependencies
RUN ${RHASSPY_PIP} install -r ${RHASSPY_DIR}/requirements.txt

# Snowboy wake word library
COPY download/snowboy-1.3.0.tar.gz /

# Exclude snowboy from arm64
RUN if [ "$BUILD_ARCH" != "arm64v8" ]; then ${RHASSPY_PIP} install /snowboy-1.3.0.tar.gz; fi

# Create directory for pre-built binaries
RUN mkdir -p ${RHASSPY_VENV}/tools

# Phonetisuarus
ADD download/phonetisaurus-2019-${FRIENDLY_ARCH}.tar.gz /phonetisaurus/
RUN cd /phonetisaurus && mv bin/* ${RHASSPY_VENV}/tools/ && mv lib/* ${RHASSPY_VENV}/tools/

# Opengrm
ADD download/opengrm-1.3.4-${FRIENDLY_ARCH}.tar.gz /opengrm/
RUN ls /opengrm
RUN cd /opengrm && mv bin/* ${RHASSPY_VENV}/tools/ && mv lib/*.so* ${RHASSPY_VENV}/tools/

# -----------------------------------------------------------------------------
# Runtime Image
# -----------------------------------------------------------------------------

ARG BUILD_ARCH=arm64v8
FROM ${BUILD_ARCH}/ubuntu:eoan
ARG BUILD_ARCH=arm64v8
ARG FRIENDLY_ARCH=arm64v8
ARG CPU_ARCH=aarch64

COPY etc/qemu-arm-static /usr/bin/
COPY etc/qemu-aarch64-static /usr/bin/

ENV LANG C.UTF-8
ENV RHASSPY_DIR=/usr/lib/rhasspy-voltron
ENV RHASSPY_VENV=${RHASSPY_DIR}/.venv

# Copy Rhasspy virtual environment
COPY --from=build ${RHASSPY_VENV} ${RHASSPY_VENV}

# Install Debian dependencies
RUN apt-get update && \
    apt-get install --no-install-recommends --yes \
    libportaudio2 libatlas3-base python3 python3-dev \
    libgfortran4 ca-certificates \
    perl curl supervisor mosquitto sox alsa-utils \
    espeak flite \
    gstreamer1.0-tools gstreamer1.0-plugins-good

COPY bin/ ${RHASSPY_DIR}/bin/
COPY etc/ ${RHASSPY_DIR}/etc/
COPY RHASSPY_DIRS ${RHASSPY_DIR}/
COPY VERSION ${RHASSPY_DIR}/rhasspy-server-hermes/

# Copy Rhasspy source
COPY rhasspy-server-hermes/ ${RHASSPY_DIR}/rhasspy-server-hermes/
COPY rhasspy-wake-snowboy-hermes/ ${RHASSPY_DIR}/rhasspy-wake-snowboy-hermes/
COPY rhasspy-wake-porcupine-hermes/ ${RHASSPY_DIR}/rhasspy-wake-porcupine-hermes/
COPY rhasspy-wake-precise-hermes/ ${RHASSPY_DIR}/rhasspy-wake-precise-hermes/
COPY rhasspy-profile/ ${RHASSPY_DIR}/rhasspy-profile/
COPY rhasspy-asr/ ${RHASSPY_DIR}/rhasspy-asr/
COPY rhasspy-asr-pocketsphinx/ ${RHASSPY_DIR}/rhasspy-asr-pocketsphinx/
COPY rhasspy-asr-pocketsphinx-hermes/ ${RHASSPY_DIR}/rhasspy-asr-pocketsphinx-hermes/
COPY rhasspy-dialogue-hermes/ ${RHASSPY_DIR}/rhasspy-dialogue-hermes/
COPY rhasspy-fuzzywuzzy/ ${RHASSPY_DIR}/rhasspy-fuzzywuzzy/
COPY rhasspy-fuzzywuzzy-hermes/ ${RHASSPY_DIR}/rhasspy-fuzzywuzzy-hermes/
COPY rhasspy-hermes/ ${RHASSPY_DIR}/rhasspy-hermes/
COPY rhasspy-homeassistant-hermes/ ${RHASSPY_DIR}/rhasspy-homeassistant-hermes/
COPY rhasspy-microphone-cli-hermes/ ${RHASSPY_DIR}/rhasspy-microphone-cli-hermes/
COPY rhasspy-microphone-pyaudio-hermes/ ${RHASSPY_DIR}/rhasspy-microphone-pyaudio-hermes/
COPY rhasspy-nlu/ ${RHASSPY_DIR}/rhasspy-nlu/
COPY rhasspy-nlu-hermes/ ${RHASSPY_DIR}/rhasspy-nlu-hermes/
COPY rhasspy-rasa-nlu-hermes/ ${RHASSPY_DIR}/rhasspy-rasa-nlu-hermes/
COPY rhasspy-remote-http-hermes/ ${RHASSPY_DIR}/rhasspy-remote-http-hermes/
COPY rhasspy-silence/ ${RHASSPY_DIR}/rhasspy-silence/
COPY rhasspy-speakers-cli-hermes/ ${RHASSPY_DIR}/rhasspy-speakers-cli-hermes/
COPY rhasspy-supervisor/ ${RHASSPY_DIR}/rhasspy-supervisor/
COPY rhasspy-tts-cli-hermes/ ${RHASSPY_DIR}/rhasspy-tts-cli-hermes/
COPY rhasspy-wake-pocketsphinx-hermes/ ${RHASSPY_DIR}/rhasspy-wake-pocketsphinx-hermes/

WORKDIR ${RHASSPY_DIR}

ENTRYPOINT ["bin/rhasspy-voltron"]
