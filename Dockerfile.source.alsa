ARG BUILD_ARCH=amd64
FROM ${BUILD_ARCH}/debian:buster-slim as build
ARG BUILD_ARCH=amd64

RUN apt-get update
RUN apt-get install --no-install-recommends --yes \
        python3 python3-dev python3-setuptools python3-pip python3-venv \
        build-essential swig libatlas-base-dev portaudio19-dev

# Install pre-built Kaldi with OpenFST source
ADD kaldi-2019.tar.gz /
ADD openfst-1.6.7.tar.gz /kaldi-master/tools/
RUN cd /kaldi-master/tools && \
    ln -s openfst-1.6.7 openfst && \
    cp -R openfst/src/include/* /usr/include/
ADD kaldi-2019-${BUILD_ARCH}.tar.gz /

# Build Rhasspy virtual environment
ENV RHASSPY_DIR=/usr/lib/rhasspy-voltron
ENV RHASSPY_VENV=${RHASSPY_DIR}/.venv
ENV RHASSPY_PIP=${RHASSPY_VENV}/bin/pip3

COPY requirements.txt ${RHASSPY_DIR}/
RUN python3 -m venv ${RHASSPY_VENV}
RUN ${RHASSPY_PIP} install wheel setuptools

# Temporary workaround
COPY dist/ /dist/

# Pocketsphinx without Pulseaudio dependency
COPY pocketsphinx-python.tar.gz /
RUN ${RHASSPY_PIP} install /pocketsphinx-python.tar.gz

# Runtime Python dependencies
RUN ${RHASSPY_PIP} install --no-index -f /dist/ -r ${RHASSPY_DIR}/requirements.txt

# Build Kaldi extension
COPY rhasspy-asr-kaldi/ ${RHASSPY_DIR}/rhasspy-asr-kaldi/
RUN echo /kaldi-master > ${RHASSPY_DIR}/rhasspy-asr-kaldi/kaldiroot
RUN ls /usr/lib/x86_64-linux-gnu/libatlas*

# RUN cd ${RHASSPY_DIR}/rhasspy-asr-kaldi && \
#     ${RHASSPY_DIR}/.venv/bin/python3 kaldi_setup.py install

# # Snowboy wake word library
# RUN ${RHASSPY_PIP} install https://github.com/Kitt-AI/snowboy/archive/v1.3.0.tar.gz

# # -----------------------------------------------------------------------------
# # Runtime Image
# # -----------------------------------------------------------------------------

# ARG BUILD_ARCH=amd64
# FROM ${BUILD_ARCH}/debian:buster-slim
# ARG BUILD_ARCH=amd64

# RUN apt-get update
# RUN apt-get install --no-install-recommends --yes \
#     libportaudio2 libatlas3-base python3-dev libgfortran \
#     curl python3 supervisor mosquitto sox alsa-utils

# ENV RHASSPY_DIR=/usr/lib/rhasspy-voltron
# ENV RHASSPY_VENV=${RHASSPY_DIR}/.venv

# # Install pre-built MITLM
# ADD mitlm-0.4.2-${BUILD_ARCH}.tar.gz /

# # Install pre-built Kaldi
# ADD kaldi-2019-${BUILD_ARCH}.tar.gz /

# # Copy Rhasspy virtual environment
# COPY --from=build ${RHASSPY_VENV} ${RHASSPY_VENV}

# COPY bin/ ${RHASSPY_DIR}/bin/
# COPY etc/ ${RHASSPY_DIR}/etc/
# COPY web/ ${RHASSPY_DIR}/web/
# COPY RHASSPY_DIRS ${RHASSPY_DIR}/
# COPY VERSION ${RHASSPY_DIR}/

# # Copy Rhasspy source
# COPY rhasspy-asr/ ${RHASSPY_DIR}/rhasspy-asr/
# COPY rhasspy-asr-pocketsphinx/ ${RHASSPY_DIR}/rhasspy-asr-pocketsphinx/
# COPY rhasspy-asr-pocketsphinx-hermes/ ${RHASSPY_DIR}/rhasspy-asr-pocketsphinx-hermes/
# COPY rhasspy-asr-kaldi/ ${RHASSPY_DIR}/rhasspy-asr-kaldi/
# COPY rhasspy-asr-kaldi-hermes/ ${RHASSPY_DIR}/rhasspy-asr-kaldi-hermes/
# COPY rhasspy-dialogue-hermes/ ${RHASSPY_DIR}/rhasspy-dialogue-hermes/
# COPY rhasspy-hermes/ ${RHASSPY_DIR}/rhasspy-hermes/
# COPY rhasspy-microphone-cli-hermes/ ${RHASSPY_DIR}/rhasspy-microphone-cli-hermes/
# COPY rhasspy-microphone-pyaudio-hermes/ ${RHASSPY_DIR}/rhasspy-microphone-pyaudio-hermes/
# COPY rhasspy-nlu/ ${RHASSPY_DIR}/rhasspy-nlu/
# COPY rhasspy-nlu-hermes/ ${RHASSPY_DIR}/rhasspy-nlu-hermes/
# COPY rhasspy-profile/ ${RHASSPY_DIR}/rhasspy-profile/
# COPY rhasspy-server-hermes/ ${RHASSPY_DIR}/rhasspy-server-hermes/
# COPY rhasspy-silence/ ${RHASSPY_DIR}/rhasspy-silence/
# COPY rhasspy-speakers-cli-hermes/ ${RHASSPY_DIR}/rhasspy-speakers-cli-hermes/
# COPY rhasspy-supervisor/ ${RHASSPY_DIR}/rhasspy-supervisor/
# COPY rhasspy-tts-cli-hermes/ ${RHASSPY_DIR}/rhasspy-tts-cli-hermes/
# COPY rhasspy-wake-porcupine-hermes/ ${RHASSPY_DIR}/rhasspy-wake-porcupine-hermes/
# COPY rhasspy-wake-snowboy-hermes/ ${RHASSPY_DIR}/rhasspy-wake-snowboy-hermes/

# WORKDIR ${RHASSPY_DIR}

# ENTRYPOINT ["bin/rhasspy-voltron"]
